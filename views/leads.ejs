<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRM Dashboard</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #6200ee;
            --primary-light: #9b4dff;
            --primary-dark: #3700b3;
            --secondary-color: #03dac6;
            --background-color: #ffffff;
            --background-color-light: #f5f5f5;
            --text-color: #333333;
            --text-color-light: #666666;
            --border-color: #e0e0e0;
            --success-color: #4caf50;
            --warning-color: #ff9800;
            --danger-color: #f44336;
            --border-radius: 8px;
            --hover-color: #7c4dff;
            --transition: all 0.3s ease;
        }

        body {
            margin: 0;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background-color: var(--background-color-light);
            color: var(--text-color);
            line-height: 1.6;
        }

        .header {
            background-color: var(--primary-color);
            color: white;
            padding: 1rem 0;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 1.5rem;
        }

        .container {
            max-width: 1400px;
            margin: 2rem auto;
            padding: 0 1.5rem;
        }

        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .metric-card {
            background: var(--background-color);
            padding: 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            transition: var(--transition);
        }

        .metric-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .metric-title {
            color: var(--text-color-light);
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
        }

        .metric-value {
            font-size: 2rem;
            font-weight: 600;
            color: var(--primary-color);
        }

        .pipeline-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0;
        }

        .pipeline-stage {
            background: var(--background-color);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            min-height: 200px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .stage-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid var(--primary-light);
        }

        .stage-name {
            font-weight: 600;
            color: var(--primary-color);
            font-size: 1.1rem;
        }

        .stage-count {
            background: var(--primary-light);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.8rem;
        }

        .lead-card {
            background: var(--background-color);
            border-radius: var(--border-radius);
            padding: 1rem;
            margin-bottom: 1rem;
            border: 1px solid var(--border-color);
            transition: var(--transition);
            cursor: pointer;
        }

        .lead-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            border-color: var(--primary-light);
        }

        .lead-card-header {
            margin-bottom: 0.5rem;
        }

        .lead-card-header h4 {
            margin: 0;
            color: var(--primary-color);
            font-size: 1.1rem;
        }

        .lead-card-body {
            font-size: 0.9rem;
            color: var(--text-color-light);
        }

        .lead-card-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 0.5rem;
            font-size: 0.8rem;
        }

        .tag {
            display: inline-block;
            padding: 0.25rem 0.5rem;
            background: var(--primary-light);
            color: white;
            border-radius: 1rem;
            font-size: 0.8rem;
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
        }

        .button {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: var(--border-radius);
            font-size: 0.9rem;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            background: var(--background-color);
            color: var(--text-color);
        }

        .button.primary {
            background: var(--primary-color);
            color: white;
        }

        .button.primary:hover {
            background: var(--hover-color);
            transform: translateY(-1px);
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition);
        }

        .modal.show {
            opacity: 1;
            visibility: visible;
            display: block;
        }

        .modal-content {
            background: var(--background-color);
            width: 90%;
            max-width: 600px;
            margin: 5vh auto;
            border-radius: var(--border-radius);
            padding: 2rem;
            position: relative;
            transform: translateY(-20px);
            transition: var(--transition);
        }

        .modal.show .modal-content {
            transform: translateY(0);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            color: var(--text-color);
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 0.9rem;
            transition: var(--transition);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 2px rgba(98, 0, 238, 0.1);
        }

        .activity-feed {
            background: var(--background-color);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            margin-top: 2rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .activity-item {
            display: flex;
            align-items: flex-start;
            padding: 1rem 0;
            border-bottom: 1px solid var(--border-color);
        }

        .activity-icon {
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 50%;
            background: var(--primary-light);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
        }

        @media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .container {
                padding: 1rem;
            }

            .dashboard-grid {
                grid-template-columns: 1fr;
            }

            .pipeline-container {
                grid-template-columns: 1fr;
            }

            .modal-content {
                width: 95%;
                margin: 2vh auto;
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="header-content">
            <h1>CRM Dashboard</h1>
            <div class="header-actions">
                <button class="button primary" onclick="showModal('importModal')">
                    <i class="fas fa-file-import"></i> Import Leads
                </button>
                <button class="button primary" onclick="showModal('addLeadModal')">
                    <i class="fas fa-plus"></i> Add Lead
                </button>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="dashboard-grid">
            <div class="metric-card">
                <div class="metric-title">Total Leads</div>
                <div class="metric-value"><%= leads.length %></div>
            </div>
            <div class="metric-card">
                <div class="metric-title">Active Deals</div>
                <div class="metric-value"><%= leads.filter(l => !['Closed Won', 'Closed Lost'].includes(l.stage)).length %></div>
            </div>
            <div class="metric-card">
                <div class="metric-title">Won This Month</div>
                <div class="metric-value"><%= leads.filter(l => l.stage === 'Closed Won' && new Date(l.closeDate) > new Date(new Date().setDate(1))).length %></div>
            </div>
            <div class="metric-card">
                <div class="metric-title">Follow-ups Today</div>
                <div class="metric-value"><%= leads.filter(l => l.nextFollowUp && new Date(l.nextFollowUp).toDateString() === new Date().toDateString()).length %></div>
            </div>
        </div>

        <div class="pipeline-container">
            <% stages.forEach(function(stage) { %>
                <div class="pipeline-stage">
                    <div class="stage-header">
                        <div class="stage-name"><%= stage %></div>
                        <div class="stage-count"><%= leads.filter(l => l.stage === stage).length %></div>
                    </div>
                    <div class="stage-content">
                        <% leads.filter(l => l.stage === stage).forEach(function(lead) { %>
                            <div class="lead-card" onclick="showLeadDetails('<%= JSON.stringify(lead) %>')">
                                <div class="lead-card-header">
                                    <h4><%= lead.name %></h4>
                                    <% if (lead.company) { %>
                                        <div class="company"><%= lead.company %></div>
                                    <% } %>
                                </div>
                                <div class="lead-card-body">
                                    <% if (lead.email) { %>
                                        <div><i class="fas fa-envelope"></i> <%= lead.email %></div>
                                    <% } %>
                                    <% if (lead.phone) { %>
                                        <div><i class="fas fa-phone"></i> <%= lead.phone %></div>
                                    <% } %>
                                    <% if (lead.value) { %>
                                        <div><i class="fas fa-dollar-sign"></i> <%= lead.value.toLocaleString('en-US', { style: 'currency', currency: 'USD' }) %></div>
                                    <% } %>
                                </div>
                                <% if (lead.tags && lead.tags.length > 0) { %>
                                    <div class="lead-tags">
                                        <% lead.tags.forEach(function(tag) { %>
                                            <span class="tag"><%= tag %></span>
                                        <% }); %>
                                    </div>
                                <% } %>
                                <div class="lead-card-footer">
                                    <% if (lead.nextFollowUp) { %>
                                        <div class="follow-up">
                                            <i class="fas fa-calendar"></i>
                                            <%= new Date(lead.nextFollowUp).toLocaleDateString() %>
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            <% }); %>
        </div>

        <div class="activity-feed">
            <h2>Recent Activity</h2>
            <div class="activity-list">
                <% activities.slice(0, 10).forEach(function(activity) { %>
                    <div class="activity-item">
                        <div class="activity-icon">
                            <i class="fas fa-<%= getActivityIcon(activity.type) %>"></i>
                        </div>
                        <div class="activity-content">
                            <div><%= activity.description %></div>
                            <div class="activity-time"><%= new Date(activity.timestamp).toLocaleString() %></div>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
    </div>

    <!-- Import Modal -->
    <div id="importModal" class="modal">
        <div class="modal-content">
            <h2>Import Leads</h2>
            <form id="importForm" onsubmit="handleImport(event)">
                <div class="form-group">
                    <label class="form-label">CSV File</label>
                    <input type="file" class="form-control" accept=".csv" required>
                </div>
                <div class="form-group">
                    <button type="submit" class="button primary">Import</button>
                    <button type="button" class="button" onclick="hideModal('importModal')">Cancel</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Add Lead Modal -->
    <div id="addLeadModal" class="modal">
        <div class="modal-content">
            <h2>Add New Lead</h2>
            <form id="addLeadForm" onsubmit="handleAddLead(event)">
                <div class="form-group">
                    <label class="form-label">Name *</label>
                    <input type="text" class="form-control" name="name" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Company</label>
                    <input type="text" class="form-control" name="company">
                </div>
                <div class="form-group">
                    <label class="form-label">Email *</label>
                    <input type="email" class="form-control" name="email" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Phone</label>
                    <input type="tel" class="form-control" name="phone">
                </div>
                <div class="form-group">
                    <label class="form-label">Value</label>
                    <input type="number" class="form-control" name="value" min="0">
                </div>
                <div class="form-group">
                    <label class="form-label">Source</label>
                    <select class="form-control" name="source">
                        <option value="Website">Website</option>
                        <option value="Referral">Referral</option>
                        <option value="Social Media">Social Media</option>
                        <option value="Email Campaign">Email Campaign</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label">Tags</label>
                    <input type="text" class="form-control" name="tags" placeholder="Enter tags separated by commas">
                </div>
                <div class="form-group">
                    <button type="submit" class="button primary">Add Lead</button>
                    <button type="button" class="button" onclick="hideModal('addLeadModal')">Cancel</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Lead Details Modal -->
    <div id="leadDetailsModal" class="modal">
        <div class="modal-content">
            <h2 id="leadName"></h2>
            <div id="leadDetails"></div>
            <div class="form-group">
                <label class="form-label">Stage</label>
                <select class="form-control" id="leadStageSelect" onchange="updateLeadStage(this.value)">
                    <% stages.forEach(function(stage) { %>
                        <option value="<%= stage %>"><%= stage %></option>
                    <% }); %>
                </select>
            </div>
            <div class="form-group">
                <button class="button primary" onclick="scheduleFollowUp()">
                    <i class="fas fa-calendar-plus"></i> Schedule Follow-up
                </button>
                <button class="button" onclick="hideModal('leadDetailsModal')">Close</button>
            </div>
        </div>
    </div>

    <script>
        // Global state
        let currentLeadId = null;

        // Utility functions
        function getActivityIcon(type) {
            const icons = {
                'Lead Created': 'user-plus',
                'Stage Changed': 'exchange-alt',
                'Task Created': 'tasks',
                'Note Added': 'sticky-note',
                'Follow-up Scheduled': 'calendar-plus',
                'CSV Import': 'file-import'
            };
            return icons[type] || 'circle';
        }

        // Modal functions
        function showModal(modalId) {
            document.getElementById(modalId).classList.add('show');
        }

        function hideModal(modalId) {
            document.getElementById(modalId).classList.remove('show');
        }

        // Lead management functions
        function showLeadDetails(leadData) {
            const lead = JSON.parse(leadData);
            currentLeadId = lead.id;

            document.getElementById('leadName').textContent = lead.name;
            document.getElementById('leadStageSelect').value = lead.stage;

            const detailsHtml = `
                <div class="lead-details">
                    ${lead.company ? `<p><i class="fas fa-building"></i> ${lead.company}</p>` : ''}
                    ${lead.email ? `<p><i class="fas fa-envelope"></i> ${lead.email}</p>` : ''}
                    ${lead.phone ? `<p><i class="fas fa-phone"></i> ${lead.phone}</p>` : ''}
                    ${lead.value ? `<p><i class="fas fa-dollar-sign"></i> ${lead.value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</p>` : ''}
                    ${lead.source ? `<p><i class="fas fa-source"></i> Source: ${lead.source}</p>` : ''}
                    ${lead.nextFollowUp ? `<p><i class="fas fa-calendar"></i> Next Follow-up: ${new Date(lead.nextFollowUp).toLocaleDateString()}</p>` : ''}
                </div>
                ${lead.tags && lead.tags.length > 0 ? `
                    <div class="lead-tags">
                        ${lead.tags.map(tag => `<span class="tag">${tag}</span>`).join('')}
                    </div>
                ` : ''}
            `;

            document.getElementById('leadDetails').innerHTML = detailsHtml;
            showModal('leadDetailsModal');
        }

        function updateLeadStage(newStage) {
            if (!currentLeadId) return;

            fetch('/leads/update-stage', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ leadId: currentLeadId, stage: newStage })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    throw new Error(data.error || 'Failed to update stage');
                }
            })
            .catch(error => alert('Error updating stage: ' + error.message));
        }

        function scheduleFollowUp() {
            if (!currentLeadId) return;

            const date = prompt('Enter follow-up date (YYYY-MM-DD):', new Date().toISOString().split('T')[0]);
            if (!date) return;

            fetch('/leads/schedule-followup', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ leadId: currentLeadId, dateTime: new Date(date).toISOString() })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    throw new Error(data.error || 'Failed to schedule follow-up');
                }
            })
            .catch(error => alert('Error scheduling follow-up: ' + error.message));
        }

        function handleImport(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            
            fetch('/leads/import', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(`Successfully imported ${data.count} leads`);
                    window.location.reload();
                } else {
                    throw new Error(data.error || 'Import failed');
                }
            })
            .catch(error => alert('Error importing leads: ' + error.message));
        }

        function handleAddLead(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const lead = {
                name: formData.get('name'),
                company: formData.get('company'),
                email: formData.get('email'),
                phone: formData.get('phone'),
                value: formData.get('value') ? Number(formData.get('value')) : 0,
                source: formData.get('source'),
                tags: formData.get('tags').split(',').map(tag => tag.trim()).filter(tag => tag),
                stage: 'New'
            };

            fetch('/leads/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(lead)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    throw new Error(data.error || 'Failed to add lead');
                }
            })
            .catch(error => alert('Error adding lead: ' + error.message));
        }

        // Close modals when clicking outside
        window.onclick = function(event) {
            if (event.target.classList.contains('modal')) {
                event.target.classList.remove('show');
            }
        };

        // Initialize leads data
        const leads = <%- JSON.stringify(leads) %>;
    </script>
</body>
</html>
