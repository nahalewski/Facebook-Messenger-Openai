<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.css">
    <style>
        :root {
            --primary-color: #1a73e8;
            --hover-color: #1557b0;
            --background-color: #f8f9fa;
            --text-color: #202124;
            --stage-new: #34a853;
            --stage-qualified: #1a73e8;
            --stage-contacted: #fbbc04;
            --stage-negotiation: #fa7b17;
            --stage-closed-won: #34a853;
            --stage-closed-lost: #ea4335;
            --border-radius: 12px;
            --box-shadow: 0 2px 6px rgba(60, 64, 67, 0.15);
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            line-height: 1.6;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        h1 {
            font-size: 2rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            color: var(--text-color);
        }

        .dashboard {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .metric-card {
            background: white;
            padding: 24px;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .metric-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(60, 64, 67, 0.2);
        }

        .metric-card h3 {
            margin: 0 0 12px 0;
            font-size: 0.9rem;
            color: #5f6368;
            font-weight: 500;
        }

        .metric-card .value {
            font-size: 2rem;
            font-weight: 600;
            color: var(--primary-color);
        }

        .pipeline-view {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 24px;
            margin: 30px 0;
            padding: 0;
        }

        .pipeline-stage {
            background: white;
            border-radius: var(--border-radius);
            padding: 20px;
            box-shadow: var(--box-shadow);
        }

        .pipeline-stage-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 12px;
            border-bottom: 2px solid var(--background-color);
        }

        .pipeline-stage-header h3 {
            font-size: 1.1rem;
            font-weight: 600;
            margin: 0;
        }

        .pipeline-stage-count {
            background: var(--background-color);
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .pipeline-card {
            background: white;
            border-radius: 8px;
            padding: 16px;
            margin-bottom: 12px;
            box-shadow: 0 1px 3px rgba(60, 64, 67, 0.12);
            transition: all 0.2s ease;
            border: 1px solid rgba(0, 0, 0, 0.08);
        }

        .pipeline-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(60, 64, 67, 0.15);
        }

        .pipeline-card h4 {
            margin: 0 0 8px 0;
            font-size: 1rem;
            font-weight: 500;
        }

        .pipeline-card-meta {
            font-size: 0.9rem;
            color: #5f6368;
        }

        .activity-feed {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 20px;
            margin-top: 30px;
        }

        .activity-item {
            display: flex;
            gap: 16px;
            padding: 12px 0;
            border-bottom: 1px solid var(--background-color);
        }

        .activity-icon {
            width: 36px;
            height: 36px;
            background: var(--primary-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1rem;
        }

        .activity-content {
            flex: 1;
            font-size: 0.95rem;
        }

        .activity-time {
            font-size: 0.85rem;
            color: #5f6368;
        }

        .message {
            background: #e8f0fe;
            color: var(--primary-color);
            padding: 12px 20px;
            border-radius: var(--border-radius);
            margin-bottom: 20px;
            border: 1px solid rgba(26, 115, 232, 0.2);
        }

        @media (max-width: 768px) {
            .dashboard {
                grid-template-columns: 1fr;
            }
            
            .pipeline-view {
                grid-template-columns: 1fr;
            }
            
            .container {
                padding: 12px;
            }
        }

        .action-buttons {
            display: flex;
            gap: 12px;
            margin-bottom: 20px;
        }

        .button {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 8px 16px;
            border: none;
            border-radius: var(--border-radius);
            font-size: 0.9rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            background: var(--background-color);
            color: var(--text-color);
        }

        .primary-button {
            background: var(--primary-color);
            color: white;
        }

        .primary-button:hover {
            background: var(--hover-color);
            transform: translateY(-1px);
        }

        .button i {
            font-size: 1rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1><%= title %></h1>

        <% if (message) { %>
            <div class="message" style="display: block;">
                <%= message %>
            </div>
        <% } %>

        <!-- Enhanced Dashboard -->
        <div class="dashboard">
            <div class="metric-card">
                <h3>Total Leads</h3>
                <div class="value"><%= metrics.totalLeads %></div>
            </div>
            <div class="metric-card">
                <h3>New Leads</h3>
                <div class="value"><%= metrics.newLeads %></div>
            </div>
            <div class="metric-card">
                <h3>Qualified Leads</h3>
                <div class="value"><%= metrics.qualifiedLeads %></div>
            </div>
            <div class="metric-card">
                <h3>Won Deals</h3>
                <div class="value"><%= metrics.closedWonLeads %></div>
            </div>
            <div class="metric-card">
                <h3>Conversion Rate</h3>
                <div class="value"><%= metrics.conversionRate %>%</div>
            </div>
        </div>

        <!-- Advanced Analytics -->
        <div class="stats-grid">
            <div class="stat-card">
                <h3>Avg Response Time</h3>
                <div class="stat-value"><%= metrics.avgResponseTime %> hrs</div>
                <div class="stat-trend up">
                    <i class="fas fa-arrow-up"></i> 15% vs last week
                </div>
            </div>
            <div class="stat-card">
                <h3>Tasks Due This Week</h3>
                <div class="stat-value"><%= metrics.upcomingTasks.length %></div>
                <div class="stat-trend">
                    <%= metrics.overdueTasks.length %> overdue
                </div>
            </div>
            <!-- Add more stat cards as needed -->
        </div>

        <!-- Charts -->
        <div class="chart-container">
            <canvas id="leadsChart"></canvas>
        </div>

        <!-- Tabs -->
        <div class="tabs">
            <button class="tab active" data-tab="pipeline">Pipeline</button>
            <button class="tab" data-tab="leads">Leads Table</button>
            <button class="tab" data-tab="tasks">Tasks</button>
            <button class="tab" data-tab="activity">Activity</button>
        </div>

        <!-- Pipeline View -->
        <div class="tab-content active" id="pipeline-content">
            <div class="pipeline-view">
                <% pipelines[0].stages.forEach(function(stage) { %>
                    <div class="pipeline-stage">
                        <div class="pipeline-stage-header">
                            <h3><%= stage %></h3>
                            <span class="pipeline-stage-count">
                                <%= leads.filter(l => l.stage === stage).length %>
                            </span>
                        </div>
                        <% leads.filter(l => l.stage === stage).forEach(function(lead) { %>
                            <div class="pipeline-card" onclick="showLeadDetails('<%= lead.id %>')">
                                <h4><%= lead.name %></h4>
                                <div class="pipeline-card-meta">
                                    <div>
                                        <i class="fas fa-dollar-sign"></i>
                                        <span class="value-indicator <%= lead.value > 10000 ? 'high' : lead.value > 5000 ? 'medium' : 'low' %>">
                                            <%= lead.value.toLocaleString('en-US', { style: 'currency', currency: 'USD' }) %>
                                        </span>
                                    </div>
                                    <div>
                                        <i class="fas fa-building"></i> <%= lead.company %>
                                    </div>
                                    <% if (lead.nextFollowUp) { %>
                                        <div>
                                            <i class="fas fa-calendar"></i>
                                            Next Follow-up: <%= new Date(lead.nextFollowUp).toLocaleDateString() %>
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% }); %>
            </div>
        </div>

        <!-- Leads Table View -->
        <div class="tab-content" id="leads-content">
            <div class="action-buttons" style="margin-bottom: 20px;">
                <button class="button primary-button" onclick="document.getElementById('csvFileInput').click()">
                    <i class="fas fa-file-upload"></i>
                    Upload CSV
                </button>
                <form id="csvUploadForm" action="/leads/upload" method="post" enctype="multipart/form-data" style="display: none;">
                    <input type="file" id="csvFileInput" name="csvFile" accept=".csv" onchange="handleFileUpload(this)">
                </form>
            </div>
            <!-- Previous table content remains the same -->
        </div>

        <!-- Tasks View -->
        <div class="tab-content" id="tasks-content">
            <div class="action-buttons">
                <button class="button" onclick="showAddTaskModal()">
                    <i class="fas fa-plus"></i>
                    Add Task
                </button>
            </div>
            
            <h3>Overdue Tasks</h3>
            <div class="task-list">
                <% metrics.overdueTasks.forEach(function(task) { %>
                    <div class="task-item overdue">
                        <!-- Task content -->
                    </div>
                <% }); %>
            </div>

            <h3>Upcoming Tasks</h3>
            <div class="task-list">
                <% metrics.upcomingTasks.forEach(function(task) { %>
                    <div class="task-item">
                        <!-- Task content -->
                    </div>
                <% }); %>
            </div>
        </div>

        <!-- Activity Feed -->
        <div class="tab-content" id="activity-content">
            <div class="activity-feed">
                <% metrics.recentActivities.forEach(function(activity) { %>
                    <div class="activity-item">
                        <div class="activity-icon">
                            <i class="fas fa-<%= getActivityIcon(activity.type) %>"></i>
                        </div>
                        <div class="activity-content">
                            <div><%= activity.description %></div>
                            <div class="activity-time">
                                <%= new Date(activity.timestamp).toLocaleString() %>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>

        <!-- Modals remain the same -->
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize DataTable
            $('#leadsTable').DataTable({
                order: [[1, 'desc']],
                pageLength: 25,
                responsive: true,
                columnDefs: [
                    { targets: [0, 3, 12], orderable: false }
                ]
            });

            // Initialize Charts
            const ctx = document.getElementById('leadsChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: Object.keys(metrics.leadsByStage),
                    datasets: [{
                        label: 'Leads by Stage',
                        data: Object.values(metrics.leadsByStage),
                        backgroundColor: [
                            '#4CAF50',
                            '#2196F3',
                            '#FFC107',
                            '#FF9800',
                            '#4CAF50',
                            '#f44336'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        }
                    }
                }
            });

            // Tab switching
            $('.tab').click(function() {
                $('.tab').removeClass('active');
                $(this).addClass('active');
                $('.tab-content').removeClass('active');
                $(`#${$(this).data('tab')}-content`).addClass('active');
            });

            // Hide message after 5 seconds
            setTimeout(function() {
                $('.message').fadeOut('slow');
            }, 5000);
        });

        // Helper function to get activity icon
        function getActivityIcon(type) {
            const icons = {
                'Lead Created': 'plus',
                'Stage Changed': 'arrow-right',
                'Task Created': 'tasks',
                'Note Added': 'sticky-note',
                'Follow-up Scheduled': 'calendar',
                'CSV Import': 'file-import'
            };
            return icons[type] || 'circle';
        }

        // Previous JavaScript functions remain the same

        function handleFileUpload(input) {
            if (input.files && input.files[0]) {
                const file = input.files[0];
                if (file.type !== 'text/csv' && !file.name.endsWith('.csv')) {
                    alert('Please upload a valid CSV file');
                    return;
                }

                const formData = new FormData(document.getElementById('csvUploadForm'));
                
                // Show loading state
                const uploadButton = input.parentElement.previousElementSibling;
                const originalContent = uploadButton.innerHTML;
                uploadButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Uploading...';
                uploadButton.disabled = true;

                fetch('/leads/upload', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Upload failed');
                    }
                    window.location.href = '/leads?message=Leads imported successfully';
                })
                .catch(error => {
                    alert('Error uploading file: ' + error.message);
                })
                .finally(() => {
                    // Reset the input and button
                    input.value = '';
                    uploadButton.innerHTML = originalContent;
                    uploadButton.disabled = false;
                });
            }
        }
    </script>
</body>
</html>
