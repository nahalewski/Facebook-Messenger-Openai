<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Business Internet Sales Dashboard</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #6200ee;
            --primary-light: #9b4dff;
            --primary-dark: #3700b3;
            --secondary-color: #03dac6;
            --background-color: #ffffff;
            --background-color-light: #f5f5f5;
            --text-color: #333333;
            --text-color-light: #666666;
            --border-color: #e0e0e0;
            --success-color: #4caf50;
            --warning-color: #ff9800;
            --danger-color: #f44336;
            --border-radius: 8px;
            --hover-color: #7c4dff;
            --transition: all 0.3s ease;
        }

        body {
            margin: 0;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background-color: var(--background-color-light);
            color: var(--text-color);
            line-height: 1.6;
        }

        .header {
            background: linear-gradient(135deg, var(--primary-color), var(--hover-color));
            color: white;
            padding: 1.5rem 0;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 1.5rem;
        }

        .container {
            max-width: 1400px;
            margin: 2rem auto;
            padding: 0 1.5rem;
        }

        .metrics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .metric-card {
            background: linear-gradient(135deg, var(--background-color), var(--background-color-light));
            padding: 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            transition: var(--transition);
            animation: slideIn 0.3s ease forwards;
        }

        .metric-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .metric-title {
            color: var(--text-color-light);
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
        }

        .metric-value {
            font-size: 2rem;
            font-weight: 600;
            color: var(--primary-color);
        }

        .pipeline-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0;
        }

        .pipeline-stage {
            background: linear-gradient(180deg, var(--background-color), var(--background-color-light));
            border: 1px solid var(--border-color);
            padding: 1.5rem;
            min-height: 200px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
        }

        .pipeline-stage:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            transform: translateY(-2px);
        }

        .stage-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid var(--primary-light);
            position: sticky;
            top: 0;
            background: inherit;
            z-index: 10;
            padding: 1rem;
            backdrop-filter: blur(10px);
        }

        .stage-name {
            font-weight: 600;
            color: var(--primary-color);
            font-size: 1.1rem;
        }

        .stage-count {
            background: var(--primary-light);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.8rem;
        }

        .lead-card {
            background: var(--background-color);
            border-radius: var(--border-radius);
            padding: 1rem;
            margin-bottom: 1rem;
            border: 1px solid var(--border-color);
            transition: var(--transition);
            cursor: pointer;
            animation: fadeIn 0.3s ease forwards;
        }

        .lead-card:hover {
            transform: translateY(-4px) scale(1.02);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

        .lead-card-header {
            margin-bottom: 0.5rem;
        }

        .lead-card-header h4 {
            margin: 0;
            color: var(--primary-color);
            font-size: 1.1rem;
        }

        .lead-card-body {
            font-size: 0.9rem;
            color: var(--text-color-light);
        }

        .lead-card-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 0.5rem;
            font-size: 0.8rem;
        }

        .tag {
            display: inline-block;
            padding: 0.3rem 0.8rem;
            background: linear-gradient(135deg, var(--primary-light), var(--primary-color));
            border: none;
            color: white;
            border-radius: 1rem;
            font-size: 0.8rem;
            font-weight: 500;
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
        }

        .button {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: var(--border-radius);
            font-size: 0.9rem;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            background: var(--background-color);
            color: var(--text-color);
            position: relative;
            overflow: hidden;
        }

        .button::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: width 0.3s ease, height 0.3s ease;
        }

        .button:hover::after {
            width: 200%;
            height: 200%;
        }

        .button.primary {
            background: linear-gradient(135deg, var(--primary-color), var(--hover-color));
            color: white;
        }

        .button.primary:hover {
            background: var(--hover-color);
            transform: translateY(-1px);
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition);
        }

        .modal.show {
            opacity: 1;
            visibility: visible;
            display: block;
        }

        .modal-content {
            background: var(--background-color);
            width: 90%;
            max-width: 600px;
            margin: 5vh auto;
            border-radius: var(--border-radius);
            padding: 2rem;
            position: relative;
            transform: translateY(-20px);
            transition: var(--transition);
        }

        .modal.show .modal-content {
            transform: translateY(0);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            color: var(--text-color);
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 0.9rem;
            transition: var(--transition);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 2px rgba(98, 0, 238, 0.1);
        }

        .activity-feed {
            background: var(--background-color);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            margin-top: 2rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .activity-item {
            display: flex;
            align-items: flex-start;
            padding: 1rem 0;
            border-bottom: 1px solid var(--border-color);
        }

        .activity-icon {
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 50%;
            background: var(--primary-light);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
        }

        @keyframes slideIn {
            from {
                transform: translateY(-10px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .container {
                padding: 1rem;
            }

            .metrics-grid {
                grid-template-columns: 1fr;
            }

            .pipeline-container {
                grid-template-columns: 1fr;
            }

            .modal-content {
                width: 95%;
                margin: 2vh auto;
                padding: 1rem;
            }

            .header {
                position: fixed;
                width: 100%;
                top: 0;
                z-index: 1000;
            }

            .container {
                margin-top: 80px;
            }

            .pipeline-stage {
                margin-bottom: 1rem;
            }

            .modal-content {
                margin: 1rem;
                width: calc(100% - 2rem);
            }
        }

        @media (prefers-color-scheme: dark) {
            :root {
                --background-color: #1a1a1a;
                --background-color-light: #2d2d2d;
                --text-color: #ffffff;
                --text-color-light: #a0a0a0;
                --border-color: #404040;
            }

            .modal-content {
                box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="container">
            <div class="header-content">
                <h1>Business Internet Sales Dashboard</h1>
                <div class="header-actions">
                    <button class="button primary" onclick="showAddLeadModal()">
                        <i class="fas fa-plus"></i> New Business Lead
                    </button>
                    <button class="button" onclick="showImportModal()">
                        <i class="fas fa-file-import"></i> Import Leads
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Metrics Section -->
        <div class="metrics-grid">
            <div class="metric-card">
                <h3>Active Deals</h3>
                <p class="metric-value"><%= metrics.activeDeals %></p>
            </div>
            <div class="metric-card">
                <h3>Installations Scheduled</h3>
                <p class="metric-value"><%= metrics.installationsScheduled %></p>
            </div>
            <div class="metric-card">
                <h3>Active Services</h3>
                <p class="metric-value"><%= metrics.activeServices %></p>
            </div>
            <div class="metric-card">
                <h3>Avg. Monthly Revenue</h3>
                <p class="metric-value">$<%= metrics.averageDealSize.toFixed(2) %></p>
            </div>
            <div class="metric-card">
                <h3>Top Package</h3>
                <p class="metric-value"><%= metrics.topPackage %></p>
            </div>
        </div>

        <!-- Pipeline View -->
        <div class="pipeline-container">
            <% stages.forEach(function(stage) { %>
                <div class="pipeline-stage">
                    <div class="stage-header">
                        <h3 class="stage-name"><%= stage %></h3>
                        <span class="stage-count"><%= leads.filter(l => l.stage === stage).length %></span>
                    </div>
                    <div class="lead-cards">
                        <% leads.filter(l => l.stage === stage).forEach(function(lead) { %>
                            <div class="lead-card" onclick="showLeadDetails('<%= lead.id %>')">
                                <div class="lead-card-header">
                                    <h4><%= lead.businessName || lead.name %></h4>
                                    <% if (lead.proposedPackage) { %>
                                        <span class="tag"><%= lead.proposedPackage %></span>
                                    <% } %>
                                </div>
                                <div class="lead-card-body">
                                    <p><i class="fas fa-building"></i> <%= lead.address %></p>
                                    <p><i class="fas fa-wifi"></i> Desired: <%= lead.desiredSpeed || 'Not specified' %></p>
                                    <% if (lead.monthlyBudget) { %>
                                        <p><i class="fas fa-dollar-sign"></i> Budget: $<%= lead.monthlyBudget %>/mo</p>
                                    <% } %>
                                    <% if (lead.nextFollowUp) { %>
                                        <p class="follow-up"><i class="fas fa-calendar"></i> Follow-up: <%= new Date(lead.nextFollowUp).toLocaleDateString() %></p>
                                    <% } %>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>

    <!-- Add Lead Modal -->
    <div id="addLeadModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Add New Business Lead</h2>
                <span class="close" onclick="hideAddLeadModal()">&times;</span>
            </div>
            <form id="addLeadForm" onsubmit="handleAddLead(event)">
                <div class="form-group">
                    <label>Business Name</label>
                    <input type="text" name="businessName" required>
                </div>
                <div class="form-group">
                    <label>Contact Name</label>
                    <input type="text" name="name" required>
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <input type="email" name="email" required>
                </div>
                <div class="form-group">
                    <label>Phone</label>
                    <input type="tel" name="phone" required>
                </div>
                <div class="form-group">
                    <label>Business Address</label>
                    <input type="text" name="address" required>
                </div>
                <div class="form-group">
                    <label>Current Provider</label>
                    <input type="text" name="currentProvider">
                </div>
                <div class="form-group">
                    <label>Current Speed</label>
                    <input type="text" name="currentSpeed">
                </div>
                <div class="form-group">
                    <label>Desired Speed</label>
                    <input type="text" name="desiredSpeed">
                </div>
                <div class="form-group">
                    <label>Monthly Budget</label>
                    <input type="number" name="monthlyBudget" step="0.01">
                </div>
                <div class="form-group">
                    <label>Employee Count</label>
                    <input type="number" name="employeeCount">
                </div>
                <div class="form-group">
                    <label>Interested Services</label>
                    <select name="interestedServices" multiple>
                        <option value="Internet">Internet</option>
                        <option value="Voice">Voice</option>
                        <option value="Cloud Backup">Cloud Backup</option>
                        <option value="Security">Security</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Special Requirements</label>
                    <textarea name="specialRequirements"></textarea>
                </div>
                <div class="form-group">
                    <label>Contract Length</label>
                    <select name="contractLength">
                        <option value="12 months">12 Months</option>
                        <option value="24 months">24 Months</option>
                        <option value="36 months">36 Months</option>
                        <option value="Custom">Custom</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Site Type</label>
                    <select name="siteType">
                        <option value="Single Location">Single Location</option>
                        <option value="Multi-Location">Multi-Location</option>
                        <option value="Remote Workers">Remote Workers</option>
                    </select>
                </div>
                <div class="form-actions">
                    <button type="submit" class="button primary">Add Lead</button>
                    <button type="button" class="button" onclick="hideAddLeadModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Lead Details Modal -->
    <div id="leadDetailsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Lead Details</h2>
                <span class="close" onclick="hideLeadDetailsModal()">&times;</span>
            </div>
            <div id="leadDetailsContent"></div>
        </div>
    </div>

    <script>
        // Global state
        let currentLeadId = null;

        // Utility functions
        function getActivityIcon(type) {
            const icons = {
                'Lead Created': 'user-plus',
                'Stage Changed': 'exchange-alt',
                'Task Created': 'tasks',
                'Note Added': 'sticky-note',
                'Follow-up Scheduled': 'calendar-plus',
                'CSV Import': 'file-import'
            };
            return icons[type] || 'circle';
        }

        // Modal functions
        function showModal(modalId) {
            document.getElementById(modalId).classList.add('show');
        }

        function hideModal(modalId) {
            document.getElementById(modalId).classList.remove('show');
        }

        // Lead management functions
        function showLeadDetails(leadId) {
            currentLeadId = leadId;

            // Fetch lead details from API
            fetch(`/leads/${leadId}`)
            .then(response => response.json())
            .then(data => {
                const lead = data.lead;

                document.getElementById('leadDetailsContent').innerHTML = `
                    <h3>${lead.businessName || lead.name}</h3>
                    <p><i class="fas fa-building"></i> ${lead.address}</p>
                    <p><i class="fas fa-wifi"></i> Desired: ${lead.desiredSpeed || 'Not specified'}</p>
                    <% if (lead.monthlyBudget) { %>
                        <p><i class="fas fa-dollar-sign"></i> Budget: $${lead.monthlyBudget}/mo</p>
                    <% } %>
                    <% if (lead.nextFollowUp) { %>
                        <p class="follow-up"><i class="fas fa-calendar"></i> Follow-up: ${new Date(lead.nextFollowUp).toLocaleDateString()}</p>
                    <% } %>
                `;

                showModal('leadDetailsModal');
            })
            .catch(error => console.error('Error fetching lead details:', error));
        }

        function handleAddLead(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const lead = {
                businessName: formData.get('businessName'),
                name: formData.get('name'),
                email: formData.get('email'),
                phone: formData.get('phone'),
                address: formData.get('address'),
                currentProvider: formData.get('currentProvider'),
                currentSpeed: formData.get('currentSpeed'),
                desiredSpeed: formData.get('desiredSpeed'),
                monthlyBudget: formData.get('monthlyBudget') ? Number(formData.get('monthlyBudget')) : 0,
                employeeCount: formData.get('employeeCount') ? Number(formData.get('employeeCount')) : 0,
                interestedServices: Array.from(formData.getAll('interestedServices')),
                specialRequirements: formData.get('specialRequirements'),
                contractLength: formData.get('contractLength'),
                siteType: formData.get('siteType'),
                stage: 'New'
            };

            fetch('/leads/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(lead)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    throw new Error(data.error || 'Failed to add lead');
                }
            })
            .catch(error => alert('Error adding lead: ' + error.message));
        }

        // Close modals when clicking outside
        window.onclick = function(event) {
            if (event.target.classList.contains('modal')) {
                event.target.classList.remove('show');
            }
        };

        // Initialize leads data
        const leads = <%- JSON.stringify(leads) %>;
    </script>
</body>
</html>
